name: Run All Frameworks

on:
  push:
    branches:
      - master
  pull_request:


jobs:

  autogluon:
    name: run autogluon
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Create venv
        run: python -m venv venv
      - name: Installation
        run: |
          source venv/bin/activate
          python -m pip install uv
          uv pip install autogluon openml
          uv pip list
      - name: Run
        run: |
          source venv/bin/activate
          coverage run -m runbenchmark ${{ matrix.framework }} -t ${{ matrix.task }} -f 0 -e
          coverage xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  run_frameworks:
    name: ${{ matrix.framework }}/${{ matrix.task }}
    runs-on: ubuntu-latest
    needs:
     - baseline
     - detect_changes
    if: ${{ success() }} || ${{ cancelled() }}

    strategy:
      matrix:
        python-version: [3.9]
        framework: ${{ fromJson(needs.detect_changes.outputs.frameworks) }}
        task: ${{ fromJson(needs.detect_changes.outputs.tasks) }}
        benchmark: ${{ fromJson(needs.detect_changes.outputs.benchmark) }}
      fail-fast:  true  # not sure about this one, but considering the big workload it might be nicer

    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Create venv
      run: python -m venv venv
    - uses: actions/cache@v3
      if: failure()
      id: cache
      with:
        path: /home/runner/work/automlbenchmark/automlbenchmark/venv
        key: pip-v3-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          pip-v3-
    - name: Install Requirements
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        source venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install "coverage[toml]"
    - name: Check Things
      run: |
        ls -lah venv
        ls -lah venv/bin
        ls -lah /home/runner/work/automlbenchmark/automlbenchmark/venv/bin
        echo $(pwd)
    - name: Run ${{ matrix.framework }} on ${{ matrix.task }}
      run: |
        source venv/bin/activate
        coverage run -m runbenchmark ${{ matrix.framework }} ${{ matrix.benchmark }} test -f 0 -t ${{ matrix.task }} -e
        coverage xml
      env:
        GITHUB_PAT: ${{ secrets.PUBLIC_ACCESS_GITHUB_PAT }}
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
